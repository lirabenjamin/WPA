for(i in unique(code$Subscale)){
code %>% filter(Subscale == i) %>% pull(Item) %>% print()
}
list = list()
for(i in unique(code$Subscale)){
list = code %>% filter(Subscale == i) %>% pull(Item) %>% append(list)
}
list
code
ex = function(x){code %>% filter(Subscale == unique(code$Subscale)[x] %>% pull(Item))}
ex(1)
unique(code$Subscale)
unique(code$Subscale)[]
unique(code$Subscale)[1]
ex = function(x){code %>% filter(Subscale == unique(code$Subscale)[x]) %>% pull(Item))}
ex(1)
code
x = 1
code %>% filter(Subscale == unique(code$Subscale)[x])
code %>% filter(Subscale == unique(code$Subscale)[x]) %>% pull(Item)
ex = function(x){code %>% filter(Subscale == unique(code$Subscale)[x]) %>% pull(Item)}
ex(1)
tibble(ex(1) %>% score)
unique(code$Subscale)
tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
d
tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
code = read.csv("data/Item codebook.csv") %>% filter(!str_detect(Item,"HumExp"))
ex = function(x){code %>% filter(Subscale == unique(code$Subscale)[x]) %>% pull(Item)}
score = function(vars,data=d){data %>% rowwise %>% select(vars) %>% rowMeans(na.rm = T)}
tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
scores = tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
d
cbind(d[c(1:4),ncol(d),ncol(d)-1],scores)
d[c(1:4),ncol(d),ncol(d)-1]
cbind(d[,c(1:4),ncol(d),ncol(d)-1],scores)
cbind(d[c(1:4,ncol(d),ncol(d)-1)],scores)
colnames(scores)
colnames(scores) = d
d
d %>% select(GritPer_scale:Taker_scale) %>% colnames()
unique(code$Subscale)
colnames(scores) = c("GritPas_scale","GritPer_scale"  ,"HumRec_scale"  , "HumMot_scale","Giver_scale"   ,"Matcher_scale" ,"Taker_scale"  )
cbind(d[c(1:4,ncol(d),ncol(d)-1)],scores)
ex(1)
ex(2)
ex(3)
ex(4)
ex(5)
ex(6)
ex(7)
#d9 = read.csv("data/WCI_MBA_data_2019.csv")
#d0 = read.csv("data/WCI_MBA_data_2020.csv")
#d = rbind(d9,d0)
d = read.csv("data/MBA_data_2020 - w:experimental items.csv")
d
#d9 = read.csv("data/WCI_MBA_data_2019.csv")
#d0 = read.csv("data/WCI_MBA_data_2020.csv")
#d = rbind(d9,d0)
d = read.csv("data/MBA_data_2020 - w:experimental items.csv")
code = read.csv("data/Item codebook.csv") %>% filter(!str_detect(Item,"HumExp"))
ex = function(x){code %>% filter(Subscale == unique(code$Subscale)[x]) %>% pull(Item)}
score = function(vars,data=d){data %>% rowwise %>% select(vars) %>% rowMeans(na.rm = T)}
scores = tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
code = read.csv("data/Item codebook.csv")
ex = function(x){code %>% filter(Subscale == unique(code$Subscale)[x]) %>% pull(Item)}
score = function(vars,data=d){data %>% rowwise %>% select(vars) %>% rowMeans(na.rm = T)}
scores = tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
colnames(scores) = c("GritPas_scale","GritPer_scale"  ,"HumRec_scale"  , "HumMot_scale","Giver_scale"   ,"Matcher_scale" ,"Taker_scale"  )
cbind(d[c(1:4,ncol(d),ncol(d)-1)],scores)
d
d %>% select(1:4)
d %>% select(1:4,year,class)
cbind(d %>% select(1:4,year,class),scores)
ex(1)
ex(2)
ex(3)
ex(4)
ex(3) %>% score
ex(3)
ex(4)
ex(5)
ex(6)
ex(7)
scores = tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
colnames(scores) = c("GritPas_scale","GritPer_scale"  , "HumMot_scale","HumRec_scale"  ,"Giver_scale"   ,"Matcher_scale" ,"Taker_scale"  )
cbind(d %>% select(1:4,year,class),scores)
d = d %>% filter(Relationship != "Self")
mnj = d %>%
group_by(SubjectID,year) %>%
summarise(nj = n()) %>%
group_by(year) %>%
summarise(nj = mean(nj))
ng = d %>%
group_by(SubjectID,year) %>%
summarise(nj = n(),
nj2 = nj^2) %>%
group_by(year) %>%
mutate(nt = n(),
ng = (1/(nt-1))*(sum(nj) - (sum(nj2)/sum(nj)))) %>%
group_by(year) %>%
summarise(ng = mean(ng))
left_join(mnj,ng)
library(careless)
install.packages("careless")
library(careless)
d
cbind(d %>% select(1:4,year,class),scores)
d = cbind(d %>% select(1:4,year,class),scores)
d = d %>% filter(Relationship != "Self")
mnj = d %>%
group_by(SubjectID,year) %>%
summarise(nj = n()) %>%
group_by(year) %>%
summarise(nj = mean(nj))
ng = d %>%
group_by(SubjectID,year) %>%
summarise(nj = n(),
nj2 = nj^2) %>%
group_by(year) %>%
mutate(nt = n(),
ng = (1/(nt-1))*(sum(nj) - (sum(nj2)/sum(nj)))) %>%
group_by(year) %>%
summarise(ng = mean(ng))
left_join(mnj,ng)
d
cbind(d %>% select(1:4,year,class),scores)
#d9 = read.csv("data/WCI_MBA_data_2019.csv")
#d0 = read.csv("data/WCI_MBA_data_2020.csv")
#d = rbind(d9,d0)
d = read.csv("data/MBA_data_2020 - w:experimental items.csv")
#d9 = read.csv("data/WCI_MBA_data_2019.csv")
#d0 = read.csv("data/WCI_MBA_data_2020.csv")
#d = rbind(d9,d0)
d0 = read.csv("data/MBA_data_2020 - w:experimental items.csv")
code = read.csv("data/Item codebook.csv")
ex = function(x){code %>% filter(Subscale == unique(code$Subscale)[x]) %>% pull(Item)}
score = function(vars,data=d0){data %>% rowwise %>% select(vars) %>% rowMeans(na.rm = T)}
scores = tibble(ex(1) %>% score,
ex(2) %>% score,
ex(3) %>% score,
ex(4) %>% score,
ex(5) %>% score,
ex(6) %>% score,
ex(7) %>% score)
colnames(scores) = c("GritPas_scale","GritPer_scale"  , "HumMot_scale","HumRec_scale"  ,"Giver_scale"   ,"Matcher_scale" ,"Taker_scale"  )
d = cbind(d0 %>% select(1:4,year,class),scores)
d = d %>% filter(Relationship != "Self")
mnj = d %>%
group_by(SubjectID,year) %>%
summarise(nj = n()) %>%
group_by(year) %>%
summarise(nj = mean(nj))
ng = d %>%
group_by(SubjectID,year) %>%
summarise(nj = n(),
nj2 = nj^2) %>%
group_by(year) %>%
mutate(nt = n(),
ng = (1/(nt-1))*(sum(nj) - (sum(nj2)/sum(nj)))) %>%
group_by(year) %>%
summarise(ng = mean(ng))
left_join(mnj,ng)
library(careless)
d
d0 %>% filter(Relationship != "Self")
d0 %>% filter(Relationship != "Self") %>% nrow()
d0 %>% filter(Relationship != "Self") %>% select(select(SubjectID,
EvaluatorID,
starts_with("Giver_"),
starts_with("Matcher_"),
starts_with("Taker_"),
starts_with("GritPas_"),
starts_with("GritPer_"),
starts_with("HumMot_"),
starts_with("HumRec_"),
starts_with("HumExp_"),
-ends_with("_scale")))
d0
d0 %>% filter(Relationship != "Self") %>% (select(SubjectID,
EvaluatorID,
starts_with("Giver_"),
starts_with("Matcher_"),
starts_with("Taker_"),
starts_with("GritPas_"),
starts_with("GritPer_"),
starts_with("HumMot_"),
starts_with("HumRec_"),
starts_with("HumExp_"),
-ends_with("_scale")))
d0 %>% filter(Relationship != "Self") %>% select(SubjectID,
EvaluatorID,
starts_with("Giver_"),
starts_with("Matcher_"),
starts_with("Taker_"),
starts_with("GritPas_"),
starts_with("GritPer_"),
starts_with("HumMot_"),
starts_with("HumRec_"),
starts_with("HumExp_"),
-ends_with("_scale"))
d0 %>% filter(Relationship != "Self") %>% select(SubjectID,
EvaluatorID,
starts_with("Giver_"),
starts_with("Matcher_"),
starts_with("Taker_"),
starts_with("GritPas_"),
starts_with("GritPer_"),
starts_with("HumMot_"),
starts_with("HumRec_"),
starts_with("HumExp_"),
-ends_with("_scale")) %>% longstring()
d0 %>% filter(Relationship != "Self") %>% select(SubjectID,
EvaluatorID,
starts_with("Giver_"),
starts_with("Matcher_"),
starts_with("Taker_"),
starts_with("GritPas_"),
starts_with("GritPer_"),
starts_with("HumMot_"),
starts_with("HumRec_"),
starts_with("HumExp_"),
-ends_with("_scale")) %>% longstring()>10
careless = d0 %>% filter(Relationship != "Self") %>% select(SubjectID,
EvaluatorID,
starts_with("Giver_"),
starts_with("Matcher_"),
starts_with("Taker_"),
starts_with("GritPas_"),
starts_with("GritPer_"),
starts_with("HumMot_"),
starts_with("HumRec_"),
starts_with("HumExp_"),
-ends_with("_scale")) %>% longstring()>9
careless
d0 %>% filter(Relationship != "Self") %>% select(SubjectID,
EvaluatorID,
starts_with("Giver_"),
starts_with("Matcher_"),
starts_with("Taker_"),
starts_with("GritPas_"),
starts_with("GritPer_"),
starts_with("HumMot_"),
starts_with("HumRec_"),
starts_with("HumExp_"),
-ends_with("_scale")) %>% longstring()
d %>% filter(!careless)
d %>% filter(careless)
nd =
d %>% filter(!careless) %>%
gather(Variable,Value,-c(X:Relationship,year,class)) %>%
group_by(SubjectID,year,Variable) %>%
mutate(JudgeN = 1:n()) %>%
group_by(year,Variable) %>%
nest() %>%
left_join(mnj) %>%
left_join(ng)
#iccna
nd$data[[1]] %>% select(SubjectID,JudgeN,Value) %>% spread(JudgeN,Value) %>% select(-SubjectID) %>% irrNA::iccNA()
#variance from lme
nd$data[[1]] %>% lme4::lmer(Value ~ 1 + (1|SubjectID),data = .) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID)
#icc from lme
nd$data[[16]] %>% lme4::lmer(Value ~ 1 + (1|SubjectID),data = .) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID) %>% mutate(icclme = MSW/(MSW+MSB)) %>% select(icclme)
#variance from lm
nd$data[[1]] %>% lm(Value ~ SubjectID,data = .) %>% anova() %>% as.data.frame() %>% select(`Mean Sq`) %>% rownames_to_column("id") %>% rename(msq = `Mean Sq`) %>% spread(id,msq) %>% rename(MSB = Residuals, MSW = SubjectID)
iccna = nd %>%
mutate(iccNA = map(data,function(x){x%>% select(SubjectID,JudgeN,Value) %>% spread(JudgeN,Value) %>% select(-SubjectID) %>% irrNA::iccNA()}),
iccNA = map(iccNA,function(x){x%>% `$`(ICCs) %>% as.data.frame %>% slice(1:2) %>% rownames_to_column("iccna") %>% select(iccna, ICC) %>% spread(iccna,ICC) %>% rename_all(function(x){paste0("iccna_",x)})}),
Variancelme = map(data,function(x){lme4::lmer(Value ~ 1 + (1|SubjectID),data = x) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID)}),
Variancelm = map(data,function(x){x %>% lm(Value ~ SubjectID,data = .) %>% anova() %>% as.data.frame() %>% select(`Mean Sq`) %>% rownames_to_column("id") %>% rename(msq = `Mean Sq`) %>% spread(id,msq) %>% rename(MSW = Residuals, MSB = SubjectID)}),
icclme = map(data,function(x){lme4::lmer(Value ~ 1 + (1|SubjectID),data = x) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID) %>% mutate(icclme = MSW/(MSW+MSB)) %>% select(icclme) %>% return()}))
iccna %>% unnest(Variancelm) %>% unnest(iccNA) %>% unnest(icclme) %>%
rowwise() %>%
mutate(ICC1_ng = (MSB - MSW)/(MSB+MSW*(ng-1)),
ICC1_k = (MSB - MSW)/(MSB+MSW*(nj-1)),
ICC1k_m = (MSB-MSW)/(MSB),
ICC1k_sb_ng = (ng*ICC1_ng)/(1+(ng-1)*ICC1_ng),
ICC1k_sb_k = (ng*ICC1_k)/(1+(nj-1)*ICC1_k)) %>%
select(-nj, -ng, -data,-Variancelme,-MSW,-MSB) %T>% write.clip()
#Per evaluator ####
dev = d %>% group_by(SubjectID,Relationship,year) %>%
mutate(n = n()) %>%
filter(n >1)
#Per evaluator ####
dev = d %>% filter(!careless) %>% group_by(SubjectID,Relationship,year) %>%
mutate(n = n()) %>%
filter(n >1)
mnj = dev %>%
group_by(SubjectID,year,Relationship) %>%
summarise(nj = n()) %>%
group_by(year,Relationship) %>%
summarise(nj = mean(nj))
ng = dev %>%
group_by(SubjectID,year,Relationship) %>%
summarise(nj = n(),
nj2 = nj^2) %>%
group_by(year,Relationship) %>%
mutate(nt = n(),
ng = (1/(nt-1))*(sum(nj) - (sum(nj2)/sum(nj)))) %>%
group_by(year,Relationship) %>%
summarise(ng = mean(ng))
left_join(mnj,ng)
nd =
dev %>% gather(Variable,Value,-c(X:Relationship,year,class)) %>%
group_by(SubjectID,year,Variable,Relationship) %>%
mutate(JudgeN = 1:n()) %>%
group_by(year,Variable,Relationship) %>%
nest() %>%
left_join(mnj) %>%
left_join(ng)
#iccna
nd$data[[1]] %>% select(SubjectID,JudgeN,Value) %>% spread(JudgeN,Value) %>% select(-SubjectID) %>% irrNA::iccNA()
#variance from lme
nd$data[[1]] %>% lme4::lmer(Value ~ 1 + (1|SubjectID),data = .) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID)
#icc from lme
nd$data[[16]] %>% lme4::lmer(Value ~ 1 + (1|SubjectID),data = .) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID) %>% mutate(icclme = MSW/(MSW+MSB)) %>% select(icclme)
#variance from lm
nd$data[[1]] %>% lm(Value ~ SubjectID,data = .) %>% anova() %>% as.data.frame() %>% select(`Mean Sq`) %>% rownames_to_column("id") %>% rename(msq = `Mean Sq`) %>% spread(id,msq) %>% rename(MSB = Residuals, MSW = SubjectID)
nd %>% filter(Variable == "n") %>% unnest(data)
iccna2 = nd %>%
mutate(iccNA = map(data,function(x){x%>% select(SubjectID,JudgeN,Value) %>% spread(JudgeN,Value) %>% select(-SubjectID) %>% irrNA::iccNA()}),
iccNA = map(iccNA,function(x){x%>% `$`(ICCs) %>% as.data.frame %>% slice(1:2) %>% rownames_to_column("iccna") %>% select(iccna, ICC) %>% spread(iccna,ICC) %>% rename_all(function(x){paste0("iccna_",x)})}),
Variancelme = map(data,function(x){lme4::lmer(Value ~ 1 + (1|SubjectID),data = x) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID)}),
Variancelm = map(data,function(x){x %>% lm(Value ~ SubjectID,data = .) %>% anova() %>% as.data.frame() %>% select(`Mean Sq`) %>% rownames_to_column("id") %>% rename(msq = `Mean Sq`) %>% spread(id,msq) %>% rename(MSW = Residuals, MSB = SubjectID)}),
icclme = map(data,function(x){lme4::lmer(Value ~ 1 + (1|SubjectID),data = x) %>% VarCorr() %>% as.data.frame() %>% select(grp,vcov) %>% spread(grp,vcov) %>% rename(MSB = Residual, MSW = SubjectID) %>% mutate(icclme = MSW/(MSW+MSB)) %>% select(icclme) %>% return()}))
iccna2 %>% unnest(Variancelm) %>% unnest(iccNA) %>% unnest(icclme) %>%
rowwise() %>%
mutate(ICC1_ng = (MSB - MSW)/(MSB+MSW*(ng-1)),
ICC1_k = (MSB - MSW)/(MSB+MSW*(nj-1)),
ICC1k_m = (MSB-MSW)/(MSB),
ICC1k_sb_ng = (ng*ICC1_ng)/(1+(ng-1)*ICC1_ng),
ICC1k_sb_k = (ng*ICC1_k)/(1+(nj-1)*ICC1_k)) %>%
select(-nj,  -data,-Variancelme,-MSW,-MSB) %T>% write.clip()
iccna2 %>% unnest(Variancelm) %>% unnest(iccNA) %>% unnest(icclme) %>%
rowwise() %>%
mutate(ICC1_ng = (MSB - MSW)/(MSB+MSW*(ng-1)),
ICC1_k = (MSB - MSW)/(MSB+MSW*(nj-1)),
ICC1k_m = (MSB-MSW)/(MSB),
ICC1k_sb_ng = (ng*ICC1_ng)/(1+(ng-1)*ICC1_ng),
ICC1k_sb_k = (ng*ICC1_k)/(1+(nj-1)*ICC1_k)) %>%
select(Relationship,year,Variable,ng,`iccna_ICC(1)`,`iccna_ICC(k)`) %>%
mutate_at(5:6,numformat) %>%
unite(ICC, matches("ICC"),sep = " ") %>%
select(-ng) %>%
spread(Relationship,ICC) %>%
filter(Variable != "n") %T>%
write.clip
D
d
d0
d9 %>% colnames()
files = (Sys.glob ("~/Downloads/Coding/*.xlsx"))
files
files
%>%
enframe()
files %>%
enframe()
files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Final_Batch")
files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Coding/") %>%
pull(n)
files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Coding/") %>%
write.clip()
library(xlsx)
library(tidyverse)
files = (Sys.glob ("~/Downloads/Coding/*.xlsx"))
names = files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Final_Batch") %>%
pull(n)
files
data = readxl::read_excel(files[2]) %>% mutate(file = names[2]) %>% mutate_all(as.character)
for(i in 3:length(names)){
d = readxl::read_excel(files[i]) %>% mutate(file = names[i]) %>% mutate_all(as.character)
data = bind_rows(data,d)
}
data = data[1:12]
data$a;applicantprofileid
data$applicantprofileid
data$applicantprofileid %>% unique
data$applicantprofileid %>% unique %>% length()
data
library(tidyverse)
#coder data
files = (Sys.glob("~/Downloads/Coding/*.xlsx"))
names = files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Final_Batch") %>%
pull(n)
data = readxl::read_excel(files[2]) %>% mutate(file = names[1]) %>% mutate_all(as.character)
library(readxl)
#coder data
files = (Sys.glob("~/Downloads/Coding/*.xlsx"))
names = files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Final_Batch") %>%
pull(n)
data = readxl::read_excel(files[2]) %>% mutate(file = names[1]) %>% mutate_all(as.character)
for(i in 2:length(names)){
d = readxl::read_excel(files[i]) %>% mutate(file = names[i]) %>% mutate_all(as.character)
data = bind_rows(data,d)
}
rm(d)
data = data[1:12]
indivcoder = data %>% mutate_at(1,as.numeric)
rm(data,files,i,names)
indivcoder
indivcoder$applicantprofileid %>% unique()
indivcoder$applicantprofileid %>% unique() %>% nrow()
indivcoder$applicantprofileid %>% unique() %>% length()
#coder data
files = (Sys.glob("~/Downloads/Coding/*.xlsx"))
names = files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Final_Batch") %>%
pull(n)
data = readxl::read_excel(files[2]) %>% mutate(file = names[2]) %>% mutate_all(as.character)
files
data = readxl::read_excel(files[2]) %>% mutate(file = names[2]) %>% mutate_all(as.character)
for(i in 3:length(names)){
d = readxl::read_excel(files[i]) %>% mutate(file = names[i]) %>% mutate_all(as.character)
data = bind_rows(data,d)
}
rm(d)
data = data[1:12]
indivcoder = data %>% mutate_at(1,as.numeric)
rm(data,files,i,names)
data %>% mutate_at(vars(-response,file),as.numeric)
data %>% mutate_at(vars(-response,-file),as.numeric)
data %>% mutate_at(vars(all.vars(),-response,-file),as.numeric)
data %>% mutate_at(1,3:11,as.numeric)
data %>% mutate_at(c(1,3:11),as.numeric)
library(tidyverse)
library(readxl)
#coder data
files = (Sys.glob("~/Downloads/Coding/*.xlsx"))
names = files %>%
enframe() %>%
separate(value, c("t","n"),sep = "Final_Batch") %>%
pull(n)
data = readxl::read_excel(files[2]) %>% mutate(file = names[2]) %>% mutate_all(as.character)
for(i in 3:length(names)){
d = readxl::read_excel(files[i]) %>% mutate(file = names[i]) %>% mutate_all(as.character)
data = bind_rows(data,d)
}
rm(d)
data = data[1:12]
data %>% mutate_at(c(1,3:11),as.numeric)
indivcoder = data %>% mutate_at(c(1,3:11),as.numeric)
rm(data,files,i,names)
write_csv(indivcoder,"Merged coder data.csv")
indivcoder
indivcoder$applicantprofileid
indivcoder$applicantprofileid %>% length()
indivcoder$applicantprofileid %>% is.na()
indivcoder$applicantprofileid %>% is.na() %>% sum()
indivcoder$applicantprofileid %>% unique()
indivcoder$applicantprofileid %>% unique() %>% length()
indivcoder$applicantprofileid %>% unique() %>% is.na()
indivcoder$applicantprofileid %>% unique() %>% !(is.na())
indivcoder$applicantprofileid %>% unique() %>% (is.na())
indivcoder$applicantprofileid %>% unique() %>% is.na()
indivcoder$applicantprofileid %>% unique() %>% is.na() %>% `!`
indivcoder$applicantprofileid %>% unique() %>% is.na() %>% `!` %>% sum()
